
Ultrasonic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000c0e  00000ca2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800112  00800112  00000cb4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014f5  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c2b  00000000  00000000  000023bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009d0  00000000  00000000  00002fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000324  00000000  00000000  000039b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000711  00000000  00000000  00003cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000814  00000000  00000000  000043ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00004c01  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	76 c1       	rjmp	.+748    	; 0x2fa <__vector_3>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e0       	ldi	r30, 0x0E	; 14
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 31       	cpi	r26, 0x14	; 20
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	42 d1       	rcall	.+644    	; 0x348 <main>
  c4:	a2 c5       	rjmp	.+2884   	; 0xc0a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_sendToI2C>:
	LCD_writeCmdData(command);
}

void LCD_displayClear()
{
	LCD_writeCmdData(LCD_DISPLAY_CLEAR);
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	99 c1       	rjmp	.+818    	; 0x400 <I2C_txByte>
  ce:	08 95       	ret

000000d0 <LCD_backLightOn>:
  d0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
  d4:	68 60       	ori	r22, 0x08	; 8
  d6:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
  da:	8e e4       	ldi	r24, 0x4E	; 78
  dc:	f5 cf       	rjmp	.-22     	; 0xc8 <LCD_sendToI2C>
  de:	08 95       	ret

000000e0 <LCD_cmdMode>:
  e0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
  e4:	6e 7f       	andi	r22, 0xFE	; 254
  e6:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
  ea:	8e e4       	ldi	r24, 0x4E	; 78
  ec:	ed cf       	rjmp	.-38     	; 0xc8 <LCD_sendToI2C>
  ee:	08 95       	ret

000000f0 <LCD_charMode>:
  f0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
  f4:	61 60       	ori	r22, 0x01	; 1
  f6:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
  fa:	8e e4       	ldi	r24, 0x4E	; 78
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <LCD_sendToI2C>
  fe:	08 95       	ret

00000100 <LCD_writeMode>:
 100:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
 104:	6d 7f       	andi	r22, 0xFD	; 253
 106:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
 10a:	8e e4       	ldi	r24, 0x4E	; 78
 10c:	dd cf       	rjmp	.-70     	; 0xc8 <LCD_sendToI2C>
 10e:	08 95       	ret

00000110 <LCD_enableHigh>:
 110:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
 114:	64 60       	ori	r22, 0x04	; 4
 116:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
 11a:	8e e4       	ldi	r24, 0x4E	; 78
 11c:	d5 df       	rcall	.-86     	; 0xc8 <LCD_sendToI2C>
 11e:	8f e9       	ldi	r24, 0x9F	; 159
 120:	9f e0       	ldi	r25, 0x0F	; 15
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_enableHigh+0x12>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LCD_enableHigh+0x18>
 128:	00 00       	nop
 12a:	08 95       	ret

0000012c <LCD_enableLow>:
 12c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
 130:	6b 7f       	andi	r22, 0xFB	; 251
 132:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
 136:	8e e4       	ldi	r24, 0x4E	; 78
 138:	c7 df       	rcall	.-114    	; 0xc8 <LCD_sendToI2C>
 13a:	8f e9       	ldi	r24, 0x9F	; 159
 13c:	9f e0       	ldi	r25, 0x0F	; 15
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <LCD_enableLow+0x12>
 142:	00 c0       	rjmp	.+0      	; 0x144 <LCD_enableLow+0x18>
 144:	00 00       	nop
 146:	08 95       	ret

00000148 <LCD_writeNibble>:
 148:	cf 93       	push	r28
 14a:	c8 2f       	mov	r28, r24
 14c:	e1 df       	rcall	.-62     	; 0x110 <LCD_enableHigh>
 14e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
 152:	6f 70       	andi	r22, 0x0F	; 15
 154:	c0 7f       	andi	r28, 0xF0	; 240
 156:	6c 2b       	or	r22, r28
 158:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
 15c:	8e e4       	ldi	r24, 0x4E	; 78
 15e:	b4 df       	rcall	.-152    	; 0xc8 <LCD_sendToI2C>
 160:	e5 df       	rcall	.-54     	; 0x12c <LCD_enableLow>
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <LCD_writeByte>:
 166:	cf 93       	push	r28
 168:	c8 2f       	mov	r28, r24
 16a:	ee df       	rcall	.-36     	; 0x148 <LCD_writeNibble>
 16c:	8c 2f       	mov	r24, r28
 16e:	82 95       	swap	r24
 170:	80 7f       	andi	r24, 0xF0	; 240
 172:	ea df       	rcall	.-44     	; 0x148 <LCD_writeNibble>
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <LCD_writeCmdData>:
 178:	cf 93       	push	r28
 17a:	c8 2f       	mov	r28, r24
 17c:	b1 df       	rcall	.-158    	; 0xe0 <LCD_cmdMode>
 17e:	c0 df       	rcall	.-128    	; 0x100 <LCD_writeMode>
 180:	c7 df       	rcall	.-114    	; 0x110 <LCD_enableHigh>
 182:	8c 2f       	mov	r24, r28
 184:	f0 df       	rcall	.-32     	; 0x166 <LCD_writeByte>
 186:	d2 df       	rcall	.-92     	; 0x12c <LCD_enableLow>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <LCD_init>:
 18c:	10 d1       	rcall	.+544    	; 0x3ae <I2C_init>
 18e:	8f e5       	ldi	r24, 0x5F	; 95
 190:	9a ee       	ldi	r25, 0xEA	; 234
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <LCD_init+0x6>
 196:	00 c0       	rjmp	.+0      	; 0x198 <LCD_init+0xc>
 198:	00 00       	nop
 19a:	a2 df       	rcall	.-188    	; 0xe0 <LCD_cmdMode>
 19c:	b1 df       	rcall	.-158    	; 0x100 <LCD_writeMode>
 19e:	80 e3       	ldi	r24, 0x30	; 48
 1a0:	d3 df       	rcall	.-90     	; 0x148 <LCD_writeNibble>
 1a2:	8f e1       	ldi	r24, 0x1F	; 31
 1a4:	9e e4       	ldi	r25, 0x4E	; 78
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_init+0x1a>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_init+0x20>
 1ac:	00 00       	nop
 1ae:	80 e3       	ldi	r24, 0x30	; 48
 1b0:	cb df       	rcall	.-106    	; 0x148 <LCD_writeNibble>
 1b2:	8f e9       	ldi	r24, 0x9F	; 159
 1b4:	9f e0       	ldi	r25, 0x0F	; 15
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_init+0x2a>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_init+0x30>
 1bc:	00 00       	nop
 1be:	80 e3       	ldi	r24, 0x30	; 48
 1c0:	c3 df       	rcall	.-122    	; 0x148 <LCD_writeNibble>
 1c2:	80 e2       	ldi	r24, 0x20	; 32
 1c4:	c1 df       	rcall	.-126    	; 0x148 <LCD_writeNibble>
 1c6:	88 e2       	ldi	r24, 0x28	; 40
 1c8:	d7 df       	rcall	.-82     	; 0x178 <LCD_writeCmdData>
 1ca:	88 e0       	ldi	r24, 0x08	; 8
 1cc:	d5 df       	rcall	.-86     	; 0x178 <LCD_writeCmdData>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	d3 df       	rcall	.-90     	; 0x178 <LCD_writeCmdData>
 1d2:	86 e0       	ldi	r24, 0x06	; 6
 1d4:	d1 df       	rcall	.-94     	; 0x178 <LCD_writeCmdData>
 1d6:	8c e0       	ldi	r24, 0x0C	; 12
 1d8:	cf df       	rcall	.-98     	; 0x178 <LCD_writeCmdData>
 1da:	7a cf       	rjmp	.-268    	; 0xd0 <LCD_backLightOn>
 1dc:	08 95       	ret

000001de <LCD_writeCharData>:
 1de:	cf 93       	push	r28
 1e0:	c8 2f       	mov	r28, r24
 1e2:	86 df       	rcall	.-244    	; 0xf0 <LCD_charMode>
 1e4:	8d df       	rcall	.-230    	; 0x100 <LCD_writeMode>
 1e6:	94 df       	rcall	.-216    	; 0x110 <LCD_enableHigh>
 1e8:	8c 2f       	mov	r24, r28
 1ea:	bd df       	rcall	.-134    	; 0x166 <LCD_writeByte>
 1ec:	9f df       	rcall	.-194    	; 0x12c <LCD_enableLow>
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <LCD_writeString>:
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	8c 01       	movw	r16, r24
 1fc:	c0 e0       	ldi	r28, 0x00	; 0
 1fe:	d0 e0       	ldi	r29, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <LCD_writeString+0x14>
 202:	ed df       	rcall	.-38     	; 0x1de <LCD_writeCharData>
 204:	21 96       	adiw	r28, 0x01	; 1
 206:	f8 01       	movw	r30, r16
 208:	ec 0f       	add	r30, r28
 20a:	fd 1f       	adc	r31, r29
 20c:	80 81       	ld	r24, Z
 20e:	81 11       	cpse	r24, r1
 210:	f8 cf       	rjmp	.-16     	; 0x202 <LCD_writeString+0x10>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	08 95       	ret

0000021c <LCD_gotoXY>:
 21c:	6f 70       	andi	r22, 0x0F	; 15
 21e:	81 70       	andi	r24, 0x01	; 1
 220:	90 e4       	ldi	r25, 0x40	; 64
 222:	89 9f       	mul	r24, r25
 224:	60 0d       	add	r22, r0
 226:	11 24       	eor	r1, r1
 228:	86 2f       	mov	r24, r22
 22a:	80 58       	subi	r24, 0x80	; 128
 22c:	a5 cf       	rjmp	.-182    	; 0x178 <LCD_writeCmdData>
 22e:	08 95       	ret

00000230 <LCD_writeStringXY>:
}
void LCD_writeStringXY(uint8_t row, uint8_t col, char *str)
{
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	ea 01       	movw	r28, r20
	LCD_gotoXY(row, col);
 236:	f2 df       	rcall	.-28     	; 0x21c <LCD_gotoXY>
	LCD_writeString(str);
 238:	ce 01       	movw	r24, r28
 23a:	db df       	rcall	.-74     	; 0x1f2 <LCD_writeString>
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <Ultrasonic_switchInterrupt>:

uint8_t ultrasonicDistanceFlag;

void Ultrasonic_switchInterrupt(uint8_t mode)
{
	if (mode == FALLING_EDGE)
 242:	81 11       	cpse	r24, r1
 244:	09 c0       	rjmp	.+18     	; 0x258 <Ultrasonic_switchInterrupt+0x16>
	{
		EICRA &= ~((1<<ISC21)|(1<<ISC20));
 246:	ea e6       	ldi	r30, 0x6A	; 106
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	8f 7c       	andi	r24, 0xCF	; 207
 24e:	80 83       	st	Z, r24
		EICRA |= ((1<<ISC21)|(0<<ISC20)); // Falling edge
 250:	80 81       	ld	r24, Z
 252:	80 62       	ori	r24, 0x20	; 32
 254:	80 83       	st	Z, r24
 256:	08 95       	ret
	}
	else
	{
		EICRA &= ~((1<<ISC21)|(1<<ISC20));
 258:	ea e6       	ldi	r30, 0x6A	; 106
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	8f 7c       	andi	r24, 0xCF	; 207
 260:	80 83       	st	Z, r24
		EICRA |= ((1<<ISC21)|(1<<ISC20)); // Rising edge
 262:	80 81       	ld	r24, Z
 264:	80 63       	ori	r24, 0x30	; 48
 266:	80 83       	st	Z, r24
 268:	08 95       	ret

0000026a <Ultrasonic_timerStart>:
	}
}
void Ultrasonic_timerStart()
{
	USONIC_TCNT = 0; // TCNT 초기화
 26a:	1d bc       	out	0x2d, r1	; 45
 26c:	1c bc       	out	0x2c, r1	; 44
	TCCR1B |= ((0<<CS12)|(1<<CS11)|(1<<CS10)); // 시간측정 시작
 26e:	8e b5       	in	r24, 0x2e	; 46
 270:	83 60       	ori	r24, 0x03	; 3
 272:	8e bd       	out	0x2e, r24	; 46
 274:	08 95       	ret

00000276 <Ultrasonic_timerStop>:
}
void Ultrasonic_timerStop()
{
	TCCR1B &= ~((1<<CS12)|(1<<CS11)|(1<<CS10)); // 시간측정 시작
 276:	8e b5       	in	r24, 0x2e	; 46
 278:	88 7f       	andi	r24, 0xF8	; 248
 27a:	8e bd       	out	0x2e, r24	; 46
 27c:	08 95       	ret

0000027e <Ultrasonic_init>:
}
void Ultrasonic_init()
{
	USONIC_DDR &= ~(1<<USONIC_ECHO); // Echo Pin
 27e:	81 b3       	in	r24, 0x11	; 17
 280:	8b 7f       	andi	r24, 0xFB	; 251
 282:	81 bb       	out	0x11, r24	; 17
	USONIC_DDR |= (1<<USONIC_TRIG); // Trigger Pin
 284:	81 b3       	in	r24, 0x11	; 17
 286:	88 60       	ori	r24, 0x08	; 8
 288:	81 bb       	out	0x11, r24	; 17
	EICRA |= ((1<<ISC21)|(1<<ISC20)); // Rising Edge Interrupt
 28a:	ea e6       	ldi	r30, 0x6A	; 106
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	80 63       	ori	r24, 0x30	; 48
 292:	80 83       	st	Z, r24
	EIMSK |= (1<<INT2); // INT2 External Interrupt
 294:	89 b7       	in	r24, 0x39	; 57
 296:	84 60       	ori	r24, 0x04	; 4
 298:	89 bf       	out	0x39, r24	; 57
	
	//TCCR1B |= ((0<<CS12)|(1<<CS11)|(1<<CS10)); // Timer1 prescaler 64
	
	ultrasonicDistanceFlag = 0;
 29a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <ultrasonicDistanceFlag>
 29e:	08 95       	ret

000002a0 <Ultrasonic_trigger>:
}
void Ultrasonic_trigger()
{
	USONIC_PORT |= (1<<USONIC_TRIG);
 2a0:	82 b3       	in	r24, 0x12	; 18
 2a2:	88 60       	ori	r24, 0x08	; 8
 2a4:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a6:	85 e3       	ldi	r24, 0x35	; 53
 2a8:	8a 95       	dec	r24
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <Ultrasonic_trigger+0x8>
 2ac:	00 00       	nop
	_delay_us(10);
	USONIC_PORT &= ~(1<<USONIC_TRIG);
 2ae:	82 b3       	in	r24, 0x12	; 18
 2b0:	87 7f       	andi	r24, 0xF7	; 247
 2b2:	82 bb       	out	0x12, r24	; 18
 2b4:	08 95       	ret

000002b6 <Ultrasonic_setCompltFlag>:
}
void Ultrasonic_setCompltFlag() // seter 변수의 값을 바꾸고 싶을 때
{
	ultrasonicDistanceFlag = 1;
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <ultrasonicDistanceFlag>
 2bc:	08 95       	ret

000002be <Ultrasonic_getCompltFlag>:
}
uint8_t Ultrasonic_getCompltFlag() // geter 변수를 사용하고 싶을 때
{
	return ultrasonicDistanceFlag;
}
 2be:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ultrasonicDistanceFlag>
 2c2:	08 95       	ret

000002c4 <Ultrasonic_clearFlag>:
void Ultrasonic_clearFlag()
{
	ultrasonicDistanceFlag = 0;
 2c4:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <ultrasonicDistanceFlag>
 2c8:	08 95       	ret

000002ca <Ultrasonic_getDistance>:
}
uint16_t Ultrasonic_getDistance()
{
	return USONIC_TCNT * 0.068;
 2ca:	6c b5       	in	r22, 0x2c	; 44
 2cc:	7d b5       	in	r23, 0x2d	; 45
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	cf d0       	rcall	.+414    	; 0x472 <__floatunsisf>
 2d4:	26 e9       	ldi	r18, 0x96	; 150
 2d6:	33 e4       	ldi	r19, 0x43	; 67
 2d8:	4b e8       	ldi	r20, 0x8B	; 139
 2da:	5d e3       	ldi	r21, 0x3D	; 61
 2dc:	30 d1       	rcall	.+608    	; 0x53e <__mulsf3>
 2de:	9d d0       	rcall	.+314    	; 0x41a <__fixunssfsi>
}
 2e0:	cb 01       	movw	r24, r22
 2e2:	08 95       	ret

000002e4 <Ultrasonic_ISR_Process>:
void Ultrasonic_ISR_Process()
{
	if (USONIC_PIN & (1<<USONIC_ECHO))
 2e4:	82 9b       	sbis	0x10, 2	; 16
 2e6:	04 c0       	rjmp	.+8      	; 0x2f0 <Ultrasonic_ISR_Process+0xc>
	{
		Ultrasonic_timerStart();
 2e8:	c0 df       	rcall	.-128    	; 0x26a <Ultrasonic_timerStart>
		Ultrasonic_switchInterrupt(FALLING_EDGE);
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	aa cf       	rjmp	.-172    	; 0x242 <Ultrasonic_switchInterrupt>
	}
	else
	{
		Ultrasonic_timerStop();
 2ee:	08 95       	ret
		Ultrasonic_switchInterrupt(RISING_EDGE);
 2f0:	c2 df       	rcall	.-124    	; 0x276 <Ultrasonic_timerStop>
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	a6 df       	rcall	.-180    	; 0x242 <Ultrasonic_switchInterrupt>
		Ultrasonic_setCompltFlag();
 2f6:	df cf       	rjmp	.-66     	; 0x2b6 <Ultrasonic_setCompltFlag>
 2f8:	08 95       	ret

000002fa <__vector_3>:
 2fa:	1f 92       	push	r1
#include "Driver/I2C_LCD/I2C_LCD.h"
#include "Driver/Ultrasonic/Ultrasonic.h"
#include "periph/I2C/I2C.h"

ISR(INT2_vect)
{
 2fc:	0f 92       	push	r0
 2fe:	0f b6       	in	r0, 0x3f	; 63
 300:	0f 92       	push	r0
 302:	11 24       	eor	r1, r1
 304:	0b b6       	in	r0, 0x3b	; 59
 306:	0f 92       	push	r0
 308:	2f 93       	push	r18
 30a:	3f 93       	push	r19
 30c:	4f 93       	push	r20
 30e:	5f 93       	push	r21
 310:	6f 93       	push	r22
 312:	7f 93       	push	r23
 314:	8f 93       	push	r24
 316:	9f 93       	push	r25
 318:	af 93       	push	r26
 31a:	bf 93       	push	r27
 31c:	ef 93       	push	r30
 31e:	ff 93       	push	r31
	Ultrasonic_ISR_Process();
 320:	e1 df       	rcall	.-62     	; 0x2e4 <Ultrasonic_ISR_Process>
}
 322:	ff 91       	pop	r31
 324:	ef 91       	pop	r30
 326:	bf 91       	pop	r27
 328:	af 91       	pop	r26
 32a:	9f 91       	pop	r25
 32c:	8f 91       	pop	r24
 32e:	7f 91       	pop	r23
 330:	6f 91       	pop	r22
 332:	5f 91       	pop	r21
 334:	4f 91       	pop	r20
 336:	3f 91       	pop	r19
 338:	2f 91       	pop	r18
 33a:	0f 90       	pop	r0
 33c:	0b be       	out	0x3b, r0	; 59
 33e:	0f 90       	pop	r0
 340:	0f be       	out	0x3f, r0	; 63
 342:	0f 90       	pop	r0
 344:	1f 90       	pop	r1
 346:	18 95       	reti

00000348 <main>:

int main(void)
{
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62
 350:	6e 97       	sbiw	r28, 0x1e	; 30
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	f8 94       	cli
 356:	de bf       	out	0x3e, r29	; 62
 358:	0f be       	out	0x3f, r0	; 63
 35a:	cd bf       	out	0x3d, r28	; 61
	Ultrasonic_init();
 35c:	90 df       	rcall	.-224    	; 0x27e <Ultrasonic_init>
	LCD_init();
 35e:	16 df       	rcall	.-468    	; 0x18c <LCD_init>
	sei();
 360:	78 94       	sei
	uint16_t distance;
	
    while (1) 
    {
		// 시나리오
		Ultrasonic_trigger();
 362:	9e df       	rcall	.-196    	; 0x2a0 <Ultrasonic_trigger>
 364:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 366:	89 e6       	ldi	r24, 0x69	; 105
 368:	98 e1       	ldi	r25, 0x18	; 24
 36a:	21 50       	subi	r18, 0x01	; 1
 36c:	80 40       	sbci	r24, 0x00	; 0
 36e:	90 40       	sbci	r25, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <main+0x22>
 372:	00 c0       	rjmp	.+0      	; 0x374 <main+0x2c>
 374:	00 00       	nop
		_delay_ms(500);
		
		if (Ultrasonic_getCompltFlag())
 376:	a3 df       	rcall	.-186    	; 0x2be <Ultrasonic_getCompltFlag>
 378:	88 23       	and	r24, r24
		{
			Ultrasonic_clearFlag();
 37a:	99 f3       	breq	.-26     	; 0x362 <main+0x1a>
 37c:	a3 df       	rcall	.-186    	; 0x2c4 <Ultrasonic_clearFlag>
			distance = Ultrasonic_getDistance();
 37e:	a5 df       	rcall	.-182    	; 0x2ca <Ultrasonic_getDistance>
 380:	9f 93       	push	r25
			
			sprintf(buff, "distance : %03dcm", distance);
 382:	8f 93       	push	r24
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	9f 93       	push	r25
 38a:	8f 93       	push	r24
 38c:	8e 01       	movw	r16, r28
 38e:	0f 5f       	subi	r16, 0xFF	; 255
 390:	1f 4f       	sbci	r17, 0xFF	; 255
 392:	1f 93       	push	r17
 394:	0f 93       	push	r16
 396:	5e d1       	rcall	.+700    	; 0x654 <sprintf>
			LCD_writeStringXY(1, 0, buff);
 398:	a8 01       	movw	r20, r16
 39a:	60 e0       	ldi	r22, 0x00	; 0
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	48 df       	rcall	.-368    	; 0x230 <LCD_writeStringXY>
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	da cf       	rjmp	.-76     	; 0x362 <main+0x1a>

000003ae <I2C_init>:
﻿#include "I2C.h"

void I2C_init()
{
	I2C_DDR |= (1<<I2C_SCL)|(1<<I2C_SDA);
 3ae:	81 b3       	in	r24, 0x11	; 17
 3b0:	83 60       	ori	r24, 0x03	; 3
 3b2:	81 bb       	out	0x11, r24	; 17
	TWBR = 72; // 100kHz SCL
 3b4:	88 e4       	ldi	r24, 0x48	; 72
 3b6:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	TWSR = 0;
 3ba:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 3be:	08 95       	ret

000003c0 <I2C_start>:
	I2C_txData(data); // 3. 1byte data 송신
	I2C_stop(); // 4. stop bit
}
void I2C_start()
{	//Send START condition
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
 3c0:	84 ea       	ldi	r24, 0xA4	; 164
 3c2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	//Wait for TWINT flag set. This indicates that the
	//START condition has been transmitted
	while (!(TWCR & (1<<TWINT)));
 3c6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 3ca:	88 23       	and	r24, r24
 3cc:	e4 f7       	brge	.-8      	; 0x3c6 <I2C_start+0x6>
}
 3ce:	08 95       	ret

000003d0 <I2C_txDevAddr>:
void I2C_txDevAddr(uint8_t SLA_W)
{	//Load SLA_W into TWDR Register.
	TWDR = SLA_W;
 3d0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	//Clear TWINT bit in TWCR to start transmission of address
	TWCR = (1<<TWINT) | (1<<TWEN);
 3d4:	84 e8       	ldi	r24, 0x84	; 132
 3d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	//Wait for TWINT flag set. This indicates that the
	//SLA+W has been transmitted, and
	//ACK/NACK has been received.
	while (!(TWCR & (1<<TWINT)));
 3da:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 3de:	88 23       	and	r24, r24
 3e0:	e4 f7       	brge	.-8      	; 0x3da <I2C_txDevAddr+0xa>
}
 3e2:	08 95       	ret

000003e4 <I2C_txData>:
void I2C_txData(uint8_t data)
{
	TWDR = data;
 3e4:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT) | (1<<TWEN);
 3e8:	84 e8       	ldi	r24, 0x84	; 132
 3ea:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));
 3ee:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 3f2:	88 23       	and	r24, r24
 3f4:	e4 f7       	brge	.-8      	; 0x3ee <I2C_txData+0xa>
}
 3f6:	08 95       	ret

000003f8 <I2C_stop>:
void I2C_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
 3f8:	84 e9       	ldi	r24, 0x94	; 148
 3fa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 3fe:	08 95       	ret

00000400 <I2C_txByte>:
	I2C_DDR |= (1<<I2C_SCL)|(1<<I2C_SDA);
	TWBR = 72; // 100kHz SCL
	TWSR = 0;
}
void I2C_txByte(uint8_t SLA_W, uint8_t data)
{
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
 404:	d8 2f       	mov	r29, r24
 406:	c6 2f       	mov	r28, r22
	I2C_start(); // 1. start bit
 408:	db df       	rcall	.-74     	; 0x3c0 <I2C_start>
	I2C_txDevAddr(SLA_W); // 2. SLA + R/W 8bit + 1bit ACK
 40a:	8d 2f       	mov	r24, r29
 40c:	e1 df       	rcall	.-62     	; 0x3d0 <I2C_txDevAddr>
	I2C_txData(data); // 3. 1byte data 송신
 40e:	8c 2f       	mov	r24, r28
 410:	e9 df       	rcall	.-46     	; 0x3e4 <I2C_txData>
	I2C_stop(); // 4. stop bit
 412:	f2 df       	rcall	.-28     	; 0x3f8 <I2C_stop>
 414:	df 91       	pop	r29
}
 416:	cf 91       	pop	r28
 418:	08 95       	ret

0000041a <__fixunssfsi>:
 41a:	70 d0       	rcall	.+224    	; 0x4fc <__fp_splitA>
 41c:	88 f0       	brcs	.+34     	; 0x440 <__fixunssfsi+0x26>
 41e:	9f 57       	subi	r25, 0x7F	; 127
 420:	90 f0       	brcs	.+36     	; 0x446 <__fixunssfsi+0x2c>
 422:	b9 2f       	mov	r27, r25
 424:	99 27       	eor	r25, r25
 426:	b7 51       	subi	r27, 0x17	; 23
 428:	a0 f0       	brcs	.+40     	; 0x452 <__fixunssfsi+0x38>
 42a:	d1 f0       	breq	.+52     	; 0x460 <__fixunssfsi+0x46>
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	88 1f       	adc	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	1a f0       	brmi	.+6      	; 0x43c <__fixunssfsi+0x22>
 436:	ba 95       	dec	r27
 438:	c9 f7       	brne	.-14     	; 0x42c <__fixunssfsi+0x12>
 43a:	12 c0       	rjmp	.+36     	; 0x460 <__fixunssfsi+0x46>
 43c:	b1 30       	cpi	r27, 0x01	; 1
 43e:	81 f0       	breq	.+32     	; 0x460 <__fixunssfsi+0x46>
 440:	77 d0       	rcall	.+238    	; 0x530 <__fp_zero>
 442:	b1 e0       	ldi	r27, 0x01	; 1
 444:	08 95       	ret
 446:	74 c0       	rjmp	.+232    	; 0x530 <__fp_zero>
 448:	67 2f       	mov	r22, r23
 44a:	78 2f       	mov	r23, r24
 44c:	88 27       	eor	r24, r24
 44e:	b8 5f       	subi	r27, 0xF8	; 248
 450:	39 f0       	breq	.+14     	; 0x460 <__fixunssfsi+0x46>
 452:	b9 3f       	cpi	r27, 0xF9	; 249
 454:	cc f3       	brlt	.-14     	; 0x448 <__fixunssfsi+0x2e>
 456:	86 95       	lsr	r24
 458:	77 95       	ror	r23
 45a:	67 95       	ror	r22
 45c:	b3 95       	inc	r27
 45e:	d9 f7       	brne	.-10     	; 0x456 <__fixunssfsi+0x3c>
 460:	3e f4       	brtc	.+14     	; 0x470 <__fixunssfsi+0x56>
 462:	90 95       	com	r25
 464:	80 95       	com	r24
 466:	70 95       	com	r23
 468:	61 95       	neg	r22
 46a:	7f 4f       	sbci	r23, 0xFF	; 255
 46c:	8f 4f       	sbci	r24, 0xFF	; 255
 46e:	9f 4f       	sbci	r25, 0xFF	; 255
 470:	08 95       	ret

00000472 <__floatunsisf>:
 472:	e8 94       	clt
 474:	09 c0       	rjmp	.+18     	; 0x488 <__floatsisf+0x12>

00000476 <__floatsisf>:
 476:	97 fb       	bst	r25, 7
 478:	3e f4       	brtc	.+14     	; 0x488 <__floatsisf+0x12>
 47a:	90 95       	com	r25
 47c:	80 95       	com	r24
 47e:	70 95       	com	r23
 480:	61 95       	neg	r22
 482:	7f 4f       	sbci	r23, 0xFF	; 255
 484:	8f 4f       	sbci	r24, 0xFF	; 255
 486:	9f 4f       	sbci	r25, 0xFF	; 255
 488:	99 23       	and	r25, r25
 48a:	a9 f0       	breq	.+42     	; 0x4b6 <__floatsisf+0x40>
 48c:	f9 2f       	mov	r31, r25
 48e:	96 e9       	ldi	r25, 0x96	; 150
 490:	bb 27       	eor	r27, r27
 492:	93 95       	inc	r25
 494:	f6 95       	lsr	r31
 496:	87 95       	ror	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	f1 11       	cpse	r31, r1
 4a0:	f8 cf       	rjmp	.-16     	; 0x492 <__floatsisf+0x1c>
 4a2:	fa f4       	brpl	.+62     	; 0x4e2 <__floatsisf+0x6c>
 4a4:	bb 0f       	add	r27, r27
 4a6:	11 f4       	brne	.+4      	; 0x4ac <__floatsisf+0x36>
 4a8:	60 ff       	sbrs	r22, 0
 4aa:	1b c0       	rjmp	.+54     	; 0x4e2 <__floatsisf+0x6c>
 4ac:	6f 5f       	subi	r22, 0xFF	; 255
 4ae:	7f 4f       	sbci	r23, 0xFF	; 255
 4b0:	8f 4f       	sbci	r24, 0xFF	; 255
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	16 c0       	rjmp	.+44     	; 0x4e2 <__floatsisf+0x6c>
 4b6:	88 23       	and	r24, r24
 4b8:	11 f0       	breq	.+4      	; 0x4be <__floatsisf+0x48>
 4ba:	96 e9       	ldi	r25, 0x96	; 150
 4bc:	11 c0       	rjmp	.+34     	; 0x4e0 <__floatsisf+0x6a>
 4be:	77 23       	and	r23, r23
 4c0:	21 f0       	breq	.+8      	; 0x4ca <__floatsisf+0x54>
 4c2:	9e e8       	ldi	r25, 0x8E	; 142
 4c4:	87 2f       	mov	r24, r23
 4c6:	76 2f       	mov	r23, r22
 4c8:	05 c0       	rjmp	.+10     	; 0x4d4 <__floatsisf+0x5e>
 4ca:	66 23       	and	r22, r22
 4cc:	71 f0       	breq	.+28     	; 0x4ea <__floatsisf+0x74>
 4ce:	96 e8       	ldi	r25, 0x86	; 134
 4d0:	86 2f       	mov	r24, r22
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	2a f0       	brmi	.+10     	; 0x4e2 <__floatsisf+0x6c>
 4d8:	9a 95       	dec	r25
 4da:	66 0f       	add	r22, r22
 4dc:	77 1f       	adc	r23, r23
 4de:	88 1f       	adc	r24, r24
 4e0:	da f7       	brpl	.-10     	; 0x4d8 <__floatsisf+0x62>
 4e2:	88 0f       	add	r24, r24
 4e4:	96 95       	lsr	r25
 4e6:	87 95       	ror	r24
 4e8:	97 f9       	bld	r25, 7
 4ea:	08 95       	ret

000004ec <__fp_split3>:
 4ec:	57 fd       	sbrc	r21, 7
 4ee:	90 58       	subi	r25, 0x80	; 128
 4f0:	44 0f       	add	r20, r20
 4f2:	55 1f       	adc	r21, r21
 4f4:	59 f0       	breq	.+22     	; 0x50c <__fp_splitA+0x10>
 4f6:	5f 3f       	cpi	r21, 0xFF	; 255
 4f8:	71 f0       	breq	.+28     	; 0x516 <__fp_splitA+0x1a>
 4fa:	47 95       	ror	r20

000004fc <__fp_splitA>:
 4fc:	88 0f       	add	r24, r24
 4fe:	97 fb       	bst	r25, 7
 500:	99 1f       	adc	r25, r25
 502:	61 f0       	breq	.+24     	; 0x51c <__fp_splitA+0x20>
 504:	9f 3f       	cpi	r25, 0xFF	; 255
 506:	79 f0       	breq	.+30     	; 0x526 <__fp_splitA+0x2a>
 508:	87 95       	ror	r24
 50a:	08 95       	ret
 50c:	12 16       	cp	r1, r18
 50e:	13 06       	cpc	r1, r19
 510:	14 06       	cpc	r1, r20
 512:	55 1f       	adc	r21, r21
 514:	f2 cf       	rjmp	.-28     	; 0x4fa <__fp_split3+0xe>
 516:	46 95       	lsr	r20
 518:	f1 df       	rcall	.-30     	; 0x4fc <__fp_splitA>
 51a:	08 c0       	rjmp	.+16     	; 0x52c <__fp_splitA+0x30>
 51c:	16 16       	cp	r1, r22
 51e:	17 06       	cpc	r1, r23
 520:	18 06       	cpc	r1, r24
 522:	99 1f       	adc	r25, r25
 524:	f1 cf       	rjmp	.-30     	; 0x508 <__fp_splitA+0xc>
 526:	86 95       	lsr	r24
 528:	71 05       	cpc	r23, r1
 52a:	61 05       	cpc	r22, r1
 52c:	08 94       	sec
 52e:	08 95       	ret

00000530 <__fp_zero>:
 530:	e8 94       	clt

00000532 <__fp_szero>:
 532:	bb 27       	eor	r27, r27
 534:	66 27       	eor	r22, r22
 536:	77 27       	eor	r23, r23
 538:	cb 01       	movw	r24, r22
 53a:	97 f9       	bld	r25, 7
 53c:	08 95       	ret

0000053e <__mulsf3>:
 53e:	0b d0       	rcall	.+22     	; 0x556 <__mulsf3x>
 540:	78 c0       	rjmp	.+240    	; 0x632 <__fp_round>
 542:	69 d0       	rcall	.+210    	; 0x616 <__fp_pscA>
 544:	28 f0       	brcs	.+10     	; 0x550 <__mulsf3+0x12>
 546:	6e d0       	rcall	.+220    	; 0x624 <__fp_pscB>
 548:	18 f0       	brcs	.+6      	; 0x550 <__mulsf3+0x12>
 54a:	95 23       	and	r25, r21
 54c:	09 f0       	breq	.+2      	; 0x550 <__mulsf3+0x12>
 54e:	5a c0       	rjmp	.+180    	; 0x604 <__fp_inf>
 550:	5f c0       	rjmp	.+190    	; 0x610 <__fp_nan>
 552:	11 24       	eor	r1, r1
 554:	ee cf       	rjmp	.-36     	; 0x532 <__fp_szero>

00000556 <__mulsf3x>:
 556:	ca df       	rcall	.-108    	; 0x4ec <__fp_split3>
 558:	a0 f3       	brcs	.-24     	; 0x542 <__mulsf3+0x4>

0000055a <__mulsf3_pse>:
 55a:	95 9f       	mul	r25, r21
 55c:	d1 f3       	breq	.-12     	; 0x552 <__mulsf3+0x14>
 55e:	95 0f       	add	r25, r21
 560:	50 e0       	ldi	r21, 0x00	; 0
 562:	55 1f       	adc	r21, r21
 564:	62 9f       	mul	r22, r18
 566:	f0 01       	movw	r30, r0
 568:	72 9f       	mul	r23, r18
 56a:	bb 27       	eor	r27, r27
 56c:	f0 0d       	add	r31, r0
 56e:	b1 1d       	adc	r27, r1
 570:	63 9f       	mul	r22, r19
 572:	aa 27       	eor	r26, r26
 574:	f0 0d       	add	r31, r0
 576:	b1 1d       	adc	r27, r1
 578:	aa 1f       	adc	r26, r26
 57a:	64 9f       	mul	r22, r20
 57c:	66 27       	eor	r22, r22
 57e:	b0 0d       	add	r27, r0
 580:	a1 1d       	adc	r26, r1
 582:	66 1f       	adc	r22, r22
 584:	82 9f       	mul	r24, r18
 586:	22 27       	eor	r18, r18
 588:	b0 0d       	add	r27, r0
 58a:	a1 1d       	adc	r26, r1
 58c:	62 1f       	adc	r22, r18
 58e:	73 9f       	mul	r23, r19
 590:	b0 0d       	add	r27, r0
 592:	a1 1d       	adc	r26, r1
 594:	62 1f       	adc	r22, r18
 596:	83 9f       	mul	r24, r19
 598:	a0 0d       	add	r26, r0
 59a:	61 1d       	adc	r22, r1
 59c:	22 1f       	adc	r18, r18
 59e:	74 9f       	mul	r23, r20
 5a0:	33 27       	eor	r19, r19
 5a2:	a0 0d       	add	r26, r0
 5a4:	61 1d       	adc	r22, r1
 5a6:	23 1f       	adc	r18, r19
 5a8:	84 9f       	mul	r24, r20
 5aa:	60 0d       	add	r22, r0
 5ac:	21 1d       	adc	r18, r1
 5ae:	82 2f       	mov	r24, r18
 5b0:	76 2f       	mov	r23, r22
 5b2:	6a 2f       	mov	r22, r26
 5b4:	11 24       	eor	r1, r1
 5b6:	9f 57       	subi	r25, 0x7F	; 127
 5b8:	50 40       	sbci	r21, 0x00	; 0
 5ba:	8a f0       	brmi	.+34     	; 0x5de <__mulsf3_pse+0x84>
 5bc:	e1 f0       	breq	.+56     	; 0x5f6 <__mulsf3_pse+0x9c>
 5be:	88 23       	and	r24, r24
 5c0:	4a f0       	brmi	.+18     	; 0x5d4 <__mulsf3_pse+0x7a>
 5c2:	ee 0f       	add	r30, r30
 5c4:	ff 1f       	adc	r31, r31
 5c6:	bb 1f       	adc	r27, r27
 5c8:	66 1f       	adc	r22, r22
 5ca:	77 1f       	adc	r23, r23
 5cc:	88 1f       	adc	r24, r24
 5ce:	91 50       	subi	r25, 0x01	; 1
 5d0:	50 40       	sbci	r21, 0x00	; 0
 5d2:	a9 f7       	brne	.-22     	; 0x5be <__mulsf3_pse+0x64>
 5d4:	9e 3f       	cpi	r25, 0xFE	; 254
 5d6:	51 05       	cpc	r21, r1
 5d8:	70 f0       	brcs	.+28     	; 0x5f6 <__mulsf3_pse+0x9c>
 5da:	14 c0       	rjmp	.+40     	; 0x604 <__fp_inf>
 5dc:	aa cf       	rjmp	.-172    	; 0x532 <__fp_szero>
 5de:	5f 3f       	cpi	r21, 0xFF	; 255
 5e0:	ec f3       	brlt	.-6      	; 0x5dc <__mulsf3_pse+0x82>
 5e2:	98 3e       	cpi	r25, 0xE8	; 232
 5e4:	dc f3       	brlt	.-10     	; 0x5dc <__mulsf3_pse+0x82>
 5e6:	86 95       	lsr	r24
 5e8:	77 95       	ror	r23
 5ea:	67 95       	ror	r22
 5ec:	b7 95       	ror	r27
 5ee:	f7 95       	ror	r31
 5f0:	e7 95       	ror	r30
 5f2:	9f 5f       	subi	r25, 0xFF	; 255
 5f4:	c1 f7       	brne	.-16     	; 0x5e6 <__mulsf3_pse+0x8c>
 5f6:	fe 2b       	or	r31, r30
 5f8:	88 0f       	add	r24, r24
 5fa:	91 1d       	adc	r25, r1
 5fc:	96 95       	lsr	r25
 5fe:	87 95       	ror	r24
 600:	97 f9       	bld	r25, 7
 602:	08 95       	ret

00000604 <__fp_inf>:
 604:	97 f9       	bld	r25, 7
 606:	9f 67       	ori	r25, 0x7F	; 127
 608:	80 e8       	ldi	r24, 0x80	; 128
 60a:	70 e0       	ldi	r23, 0x00	; 0
 60c:	60 e0       	ldi	r22, 0x00	; 0
 60e:	08 95       	ret

00000610 <__fp_nan>:
 610:	9f ef       	ldi	r25, 0xFF	; 255
 612:	80 ec       	ldi	r24, 0xC0	; 192
 614:	08 95       	ret

00000616 <__fp_pscA>:
 616:	00 24       	eor	r0, r0
 618:	0a 94       	dec	r0
 61a:	16 16       	cp	r1, r22
 61c:	17 06       	cpc	r1, r23
 61e:	18 06       	cpc	r1, r24
 620:	09 06       	cpc	r0, r25
 622:	08 95       	ret

00000624 <__fp_pscB>:
 624:	00 24       	eor	r0, r0
 626:	0a 94       	dec	r0
 628:	12 16       	cp	r1, r18
 62a:	13 06       	cpc	r1, r19
 62c:	14 06       	cpc	r1, r20
 62e:	05 06       	cpc	r0, r21
 630:	08 95       	ret

00000632 <__fp_round>:
 632:	09 2e       	mov	r0, r25
 634:	03 94       	inc	r0
 636:	00 0c       	add	r0, r0
 638:	11 f4       	brne	.+4      	; 0x63e <__fp_round+0xc>
 63a:	88 23       	and	r24, r24
 63c:	52 f0       	brmi	.+20     	; 0x652 <__fp_round+0x20>
 63e:	bb 0f       	add	r27, r27
 640:	40 f4       	brcc	.+16     	; 0x652 <__fp_round+0x20>
 642:	bf 2b       	or	r27, r31
 644:	11 f4       	brne	.+4      	; 0x64a <__fp_round+0x18>
 646:	60 ff       	sbrs	r22, 0
 648:	04 c0       	rjmp	.+8      	; 0x652 <__fp_round+0x20>
 64a:	6f 5f       	subi	r22, 0xFF	; 255
 64c:	7f 4f       	sbci	r23, 0xFF	; 255
 64e:	8f 4f       	sbci	r24, 0xFF	; 255
 650:	9f 4f       	sbci	r25, 0xFF	; 255
 652:	08 95       	ret

00000654 <sprintf>:
 654:	0f 93       	push	r16
 656:	1f 93       	push	r17
 658:	cf 93       	push	r28
 65a:	df 93       	push	r29
 65c:	cd b7       	in	r28, 0x3d	; 61
 65e:	de b7       	in	r29, 0x3e	; 62
 660:	2e 97       	sbiw	r28, 0x0e	; 14
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	de bf       	out	0x3e, r29	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	cd bf       	out	0x3d, r28	; 61
 66c:	0d 89       	ldd	r16, Y+21	; 0x15
 66e:	1e 89       	ldd	r17, Y+22	; 0x16
 670:	86 e0       	ldi	r24, 0x06	; 6
 672:	8c 83       	std	Y+4, r24	; 0x04
 674:	1a 83       	std	Y+2, r17	; 0x02
 676:	09 83       	std	Y+1, r16	; 0x01
 678:	8f ef       	ldi	r24, 0xFF	; 255
 67a:	9f e7       	ldi	r25, 0x7F	; 127
 67c:	9e 83       	std	Y+6, r25	; 0x06
 67e:	8d 83       	std	Y+5, r24	; 0x05
 680:	ae 01       	movw	r20, r28
 682:	47 5e       	subi	r20, 0xE7	; 231
 684:	5f 4f       	sbci	r21, 0xFF	; 255
 686:	6f 89       	ldd	r22, Y+23	; 0x17
 688:	78 8d       	ldd	r23, Y+24	; 0x18
 68a:	ce 01       	movw	r24, r28
 68c:	01 96       	adiw	r24, 0x01	; 1
 68e:	10 d0       	rcall	.+32     	; 0x6b0 <vfprintf>
 690:	ef 81       	ldd	r30, Y+7	; 0x07
 692:	f8 85       	ldd	r31, Y+8	; 0x08
 694:	e0 0f       	add	r30, r16
 696:	f1 1f       	adc	r31, r17
 698:	10 82       	st	Z, r1
 69a:	2e 96       	adiw	r28, 0x0e	; 14
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	f8 94       	cli
 6a0:	de bf       	out	0x3e, r29	; 62
 6a2:	0f be       	out	0x3f, r0	; 63
 6a4:	cd bf       	out	0x3d, r28	; 61
 6a6:	df 91       	pop	r29
 6a8:	cf 91       	pop	r28
 6aa:	1f 91       	pop	r17
 6ac:	0f 91       	pop	r16
 6ae:	08 95       	ret

000006b0 <vfprintf>:
 6b0:	2f 92       	push	r2
 6b2:	3f 92       	push	r3
 6b4:	4f 92       	push	r4
 6b6:	5f 92       	push	r5
 6b8:	6f 92       	push	r6
 6ba:	7f 92       	push	r7
 6bc:	8f 92       	push	r8
 6be:	9f 92       	push	r9
 6c0:	af 92       	push	r10
 6c2:	bf 92       	push	r11
 6c4:	cf 92       	push	r12
 6c6:	df 92       	push	r13
 6c8:	ef 92       	push	r14
 6ca:	ff 92       	push	r15
 6cc:	0f 93       	push	r16
 6ce:	1f 93       	push	r17
 6d0:	cf 93       	push	r28
 6d2:	df 93       	push	r29
 6d4:	cd b7       	in	r28, 0x3d	; 61
 6d6:	de b7       	in	r29, 0x3e	; 62
 6d8:	2b 97       	sbiw	r28, 0x0b	; 11
 6da:	0f b6       	in	r0, 0x3f	; 63
 6dc:	f8 94       	cli
 6de:	de bf       	out	0x3e, r29	; 62
 6e0:	0f be       	out	0x3f, r0	; 63
 6e2:	cd bf       	out	0x3d, r28	; 61
 6e4:	6c 01       	movw	r12, r24
 6e6:	7b 01       	movw	r14, r22
 6e8:	8a 01       	movw	r16, r20
 6ea:	fc 01       	movw	r30, r24
 6ec:	17 82       	std	Z+7, r1	; 0x07
 6ee:	16 82       	std	Z+6, r1	; 0x06
 6f0:	83 81       	ldd	r24, Z+3	; 0x03
 6f2:	81 ff       	sbrs	r24, 1
 6f4:	bf c1       	rjmp	.+894    	; 0xa74 <vfprintf+0x3c4>
 6f6:	ce 01       	movw	r24, r28
 6f8:	01 96       	adiw	r24, 0x01	; 1
 6fa:	3c 01       	movw	r6, r24
 6fc:	f6 01       	movw	r30, r12
 6fe:	93 81       	ldd	r25, Z+3	; 0x03
 700:	f7 01       	movw	r30, r14
 702:	93 fd       	sbrc	r25, 3
 704:	85 91       	lpm	r24, Z+
 706:	93 ff       	sbrs	r25, 3
 708:	81 91       	ld	r24, Z+
 70a:	7f 01       	movw	r14, r30
 70c:	88 23       	and	r24, r24
 70e:	09 f4       	brne	.+2      	; 0x712 <vfprintf+0x62>
 710:	ad c1       	rjmp	.+858    	; 0xa6c <vfprintf+0x3bc>
 712:	85 32       	cpi	r24, 0x25	; 37
 714:	39 f4       	brne	.+14     	; 0x724 <vfprintf+0x74>
 716:	93 fd       	sbrc	r25, 3
 718:	85 91       	lpm	r24, Z+
 71a:	93 ff       	sbrs	r25, 3
 71c:	81 91       	ld	r24, Z+
 71e:	7f 01       	movw	r14, r30
 720:	85 32       	cpi	r24, 0x25	; 37
 722:	21 f4       	brne	.+8      	; 0x72c <vfprintf+0x7c>
 724:	b6 01       	movw	r22, r12
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	d6 d1       	rcall	.+940    	; 0xad6 <fputc>
 72a:	e8 cf       	rjmp	.-48     	; 0x6fc <vfprintf+0x4c>
 72c:	91 2c       	mov	r9, r1
 72e:	21 2c       	mov	r2, r1
 730:	31 2c       	mov	r3, r1
 732:	ff e1       	ldi	r31, 0x1F	; 31
 734:	f3 15       	cp	r31, r3
 736:	d8 f0       	brcs	.+54     	; 0x76e <vfprintf+0xbe>
 738:	8b 32       	cpi	r24, 0x2B	; 43
 73a:	79 f0       	breq	.+30     	; 0x75a <vfprintf+0xaa>
 73c:	38 f4       	brcc	.+14     	; 0x74c <vfprintf+0x9c>
 73e:	80 32       	cpi	r24, 0x20	; 32
 740:	79 f0       	breq	.+30     	; 0x760 <vfprintf+0xb0>
 742:	83 32       	cpi	r24, 0x23	; 35
 744:	a1 f4       	brne	.+40     	; 0x76e <vfprintf+0xbe>
 746:	23 2d       	mov	r18, r3
 748:	20 61       	ori	r18, 0x10	; 16
 74a:	1d c0       	rjmp	.+58     	; 0x786 <vfprintf+0xd6>
 74c:	8d 32       	cpi	r24, 0x2D	; 45
 74e:	61 f0       	breq	.+24     	; 0x768 <vfprintf+0xb8>
 750:	80 33       	cpi	r24, 0x30	; 48
 752:	69 f4       	brne	.+26     	; 0x76e <vfprintf+0xbe>
 754:	23 2d       	mov	r18, r3
 756:	21 60       	ori	r18, 0x01	; 1
 758:	16 c0       	rjmp	.+44     	; 0x786 <vfprintf+0xd6>
 75a:	83 2d       	mov	r24, r3
 75c:	82 60       	ori	r24, 0x02	; 2
 75e:	38 2e       	mov	r3, r24
 760:	e3 2d       	mov	r30, r3
 762:	e4 60       	ori	r30, 0x04	; 4
 764:	3e 2e       	mov	r3, r30
 766:	2a c0       	rjmp	.+84     	; 0x7bc <vfprintf+0x10c>
 768:	f3 2d       	mov	r31, r3
 76a:	f8 60       	ori	r31, 0x08	; 8
 76c:	1d c0       	rjmp	.+58     	; 0x7a8 <vfprintf+0xf8>
 76e:	37 fc       	sbrc	r3, 7
 770:	2d c0       	rjmp	.+90     	; 0x7cc <vfprintf+0x11c>
 772:	20 ed       	ldi	r18, 0xD0	; 208
 774:	28 0f       	add	r18, r24
 776:	2a 30       	cpi	r18, 0x0A	; 10
 778:	40 f0       	brcs	.+16     	; 0x78a <vfprintf+0xda>
 77a:	8e 32       	cpi	r24, 0x2E	; 46
 77c:	b9 f4       	brne	.+46     	; 0x7ac <vfprintf+0xfc>
 77e:	36 fc       	sbrc	r3, 6
 780:	75 c1       	rjmp	.+746    	; 0xa6c <vfprintf+0x3bc>
 782:	23 2d       	mov	r18, r3
 784:	20 64       	ori	r18, 0x40	; 64
 786:	32 2e       	mov	r3, r18
 788:	19 c0       	rjmp	.+50     	; 0x7bc <vfprintf+0x10c>
 78a:	36 fe       	sbrs	r3, 6
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0xea>
 78e:	8a e0       	ldi	r24, 0x0A	; 10
 790:	98 9e       	mul	r9, r24
 792:	20 0d       	add	r18, r0
 794:	11 24       	eor	r1, r1
 796:	92 2e       	mov	r9, r18
 798:	11 c0       	rjmp	.+34     	; 0x7bc <vfprintf+0x10c>
 79a:	ea e0       	ldi	r30, 0x0A	; 10
 79c:	2e 9e       	mul	r2, r30
 79e:	20 0d       	add	r18, r0
 7a0:	11 24       	eor	r1, r1
 7a2:	22 2e       	mov	r2, r18
 7a4:	f3 2d       	mov	r31, r3
 7a6:	f0 62       	ori	r31, 0x20	; 32
 7a8:	3f 2e       	mov	r3, r31
 7aa:	08 c0       	rjmp	.+16     	; 0x7bc <vfprintf+0x10c>
 7ac:	8c 36       	cpi	r24, 0x6C	; 108
 7ae:	21 f4       	brne	.+8      	; 0x7b8 <vfprintf+0x108>
 7b0:	83 2d       	mov	r24, r3
 7b2:	80 68       	ori	r24, 0x80	; 128
 7b4:	38 2e       	mov	r3, r24
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x10c>
 7b8:	88 36       	cpi	r24, 0x68	; 104
 7ba:	41 f4       	brne	.+16     	; 0x7cc <vfprintf+0x11c>
 7bc:	f7 01       	movw	r30, r14
 7be:	93 fd       	sbrc	r25, 3
 7c0:	85 91       	lpm	r24, Z+
 7c2:	93 ff       	sbrs	r25, 3
 7c4:	81 91       	ld	r24, Z+
 7c6:	7f 01       	movw	r14, r30
 7c8:	81 11       	cpse	r24, r1
 7ca:	b3 cf       	rjmp	.-154    	; 0x732 <vfprintf+0x82>
 7cc:	98 2f       	mov	r25, r24
 7ce:	9f 7d       	andi	r25, 0xDF	; 223
 7d0:	95 54       	subi	r25, 0x45	; 69
 7d2:	93 30       	cpi	r25, 0x03	; 3
 7d4:	28 f4       	brcc	.+10     	; 0x7e0 <vfprintf+0x130>
 7d6:	0c 5f       	subi	r16, 0xFC	; 252
 7d8:	1f 4f       	sbci	r17, 0xFF	; 255
 7da:	9f e3       	ldi	r25, 0x3F	; 63
 7dc:	99 83       	std	Y+1, r25	; 0x01
 7de:	0d c0       	rjmp	.+26     	; 0x7fa <vfprintf+0x14a>
 7e0:	83 36       	cpi	r24, 0x63	; 99
 7e2:	31 f0       	breq	.+12     	; 0x7f0 <vfprintf+0x140>
 7e4:	83 37       	cpi	r24, 0x73	; 115
 7e6:	71 f0       	breq	.+28     	; 0x804 <vfprintf+0x154>
 7e8:	83 35       	cpi	r24, 0x53	; 83
 7ea:	09 f0       	breq	.+2      	; 0x7ee <vfprintf+0x13e>
 7ec:	55 c0       	rjmp	.+170    	; 0x898 <vfprintf+0x1e8>
 7ee:	20 c0       	rjmp	.+64     	; 0x830 <vfprintf+0x180>
 7f0:	f8 01       	movw	r30, r16
 7f2:	80 81       	ld	r24, Z
 7f4:	89 83       	std	Y+1, r24	; 0x01
 7f6:	0e 5f       	subi	r16, 0xFE	; 254
 7f8:	1f 4f       	sbci	r17, 0xFF	; 255
 7fa:	88 24       	eor	r8, r8
 7fc:	83 94       	inc	r8
 7fe:	91 2c       	mov	r9, r1
 800:	53 01       	movw	r10, r6
 802:	12 c0       	rjmp	.+36     	; 0x828 <vfprintf+0x178>
 804:	28 01       	movw	r4, r16
 806:	f2 e0       	ldi	r31, 0x02	; 2
 808:	4f 0e       	add	r4, r31
 80a:	51 1c       	adc	r5, r1
 80c:	f8 01       	movw	r30, r16
 80e:	a0 80       	ld	r10, Z
 810:	b1 80       	ldd	r11, Z+1	; 0x01
 812:	36 fe       	sbrs	r3, 6
 814:	03 c0       	rjmp	.+6      	; 0x81c <vfprintf+0x16c>
 816:	69 2d       	mov	r22, r9
 818:	70 e0       	ldi	r23, 0x00	; 0
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x170>
 81c:	6f ef       	ldi	r22, 0xFF	; 255
 81e:	7f ef       	ldi	r23, 0xFF	; 255
 820:	c5 01       	movw	r24, r10
 822:	4e d1       	rcall	.+668    	; 0xac0 <strnlen>
 824:	4c 01       	movw	r8, r24
 826:	82 01       	movw	r16, r4
 828:	f3 2d       	mov	r31, r3
 82a:	ff 77       	andi	r31, 0x7F	; 127
 82c:	3f 2e       	mov	r3, r31
 82e:	15 c0       	rjmp	.+42     	; 0x85a <vfprintf+0x1aa>
 830:	28 01       	movw	r4, r16
 832:	22 e0       	ldi	r18, 0x02	; 2
 834:	42 0e       	add	r4, r18
 836:	51 1c       	adc	r5, r1
 838:	f8 01       	movw	r30, r16
 83a:	a0 80       	ld	r10, Z
 83c:	b1 80       	ldd	r11, Z+1	; 0x01
 83e:	36 fe       	sbrs	r3, 6
 840:	03 c0       	rjmp	.+6      	; 0x848 <vfprintf+0x198>
 842:	69 2d       	mov	r22, r9
 844:	70 e0       	ldi	r23, 0x00	; 0
 846:	02 c0       	rjmp	.+4      	; 0x84c <vfprintf+0x19c>
 848:	6f ef       	ldi	r22, 0xFF	; 255
 84a:	7f ef       	ldi	r23, 0xFF	; 255
 84c:	c5 01       	movw	r24, r10
 84e:	2d d1       	rcall	.+602    	; 0xaaa <strnlen_P>
 850:	4c 01       	movw	r8, r24
 852:	f3 2d       	mov	r31, r3
 854:	f0 68       	ori	r31, 0x80	; 128
 856:	3f 2e       	mov	r3, r31
 858:	82 01       	movw	r16, r4
 85a:	33 fc       	sbrc	r3, 3
 85c:	19 c0       	rjmp	.+50     	; 0x890 <vfprintf+0x1e0>
 85e:	82 2d       	mov	r24, r2
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	88 16       	cp	r8, r24
 864:	99 06       	cpc	r9, r25
 866:	a0 f4       	brcc	.+40     	; 0x890 <vfprintf+0x1e0>
 868:	b6 01       	movw	r22, r12
 86a:	80 e2       	ldi	r24, 0x20	; 32
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	33 d1       	rcall	.+614    	; 0xad6 <fputc>
 870:	2a 94       	dec	r2
 872:	f5 cf       	rjmp	.-22     	; 0x85e <vfprintf+0x1ae>
 874:	f5 01       	movw	r30, r10
 876:	37 fc       	sbrc	r3, 7
 878:	85 91       	lpm	r24, Z+
 87a:	37 fe       	sbrs	r3, 7
 87c:	81 91       	ld	r24, Z+
 87e:	5f 01       	movw	r10, r30
 880:	b6 01       	movw	r22, r12
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	28 d1       	rcall	.+592    	; 0xad6 <fputc>
 886:	21 10       	cpse	r2, r1
 888:	2a 94       	dec	r2
 88a:	21 e0       	ldi	r18, 0x01	; 1
 88c:	82 1a       	sub	r8, r18
 88e:	91 08       	sbc	r9, r1
 890:	81 14       	cp	r8, r1
 892:	91 04       	cpc	r9, r1
 894:	79 f7       	brne	.-34     	; 0x874 <vfprintf+0x1c4>
 896:	e1 c0       	rjmp	.+450    	; 0xa5a <vfprintf+0x3aa>
 898:	84 36       	cpi	r24, 0x64	; 100
 89a:	11 f0       	breq	.+4      	; 0x8a0 <vfprintf+0x1f0>
 89c:	89 36       	cpi	r24, 0x69	; 105
 89e:	39 f5       	brne	.+78     	; 0x8ee <vfprintf+0x23e>
 8a0:	f8 01       	movw	r30, r16
 8a2:	37 fe       	sbrs	r3, 7
 8a4:	07 c0       	rjmp	.+14     	; 0x8b4 <vfprintf+0x204>
 8a6:	60 81       	ld	r22, Z
 8a8:	71 81       	ldd	r23, Z+1	; 0x01
 8aa:	82 81       	ldd	r24, Z+2	; 0x02
 8ac:	93 81       	ldd	r25, Z+3	; 0x03
 8ae:	0c 5f       	subi	r16, 0xFC	; 252
 8b0:	1f 4f       	sbci	r17, 0xFF	; 255
 8b2:	08 c0       	rjmp	.+16     	; 0x8c4 <vfprintf+0x214>
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	07 2e       	mov	r0, r23
 8ba:	00 0c       	add	r0, r0
 8bc:	88 0b       	sbc	r24, r24
 8be:	99 0b       	sbc	r25, r25
 8c0:	0e 5f       	subi	r16, 0xFE	; 254
 8c2:	1f 4f       	sbci	r17, 0xFF	; 255
 8c4:	f3 2d       	mov	r31, r3
 8c6:	ff 76       	andi	r31, 0x6F	; 111
 8c8:	3f 2e       	mov	r3, r31
 8ca:	97 ff       	sbrs	r25, 7
 8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <vfprintf+0x230>
 8ce:	90 95       	com	r25
 8d0:	80 95       	com	r24
 8d2:	70 95       	com	r23
 8d4:	61 95       	neg	r22
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255
 8d8:	8f 4f       	sbci	r24, 0xFF	; 255
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	f0 68       	ori	r31, 0x80	; 128
 8de:	3f 2e       	mov	r3, r31
 8e0:	2a e0       	ldi	r18, 0x0A	; 10
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	a3 01       	movw	r20, r6
 8e6:	33 d1       	rcall	.+614    	; 0xb4e <__ultoa_invert>
 8e8:	88 2e       	mov	r8, r24
 8ea:	86 18       	sub	r8, r6
 8ec:	44 c0       	rjmp	.+136    	; 0x976 <vfprintf+0x2c6>
 8ee:	85 37       	cpi	r24, 0x75	; 117
 8f0:	31 f4       	brne	.+12     	; 0x8fe <vfprintf+0x24e>
 8f2:	23 2d       	mov	r18, r3
 8f4:	2f 7e       	andi	r18, 0xEF	; 239
 8f6:	b2 2e       	mov	r11, r18
 8f8:	2a e0       	ldi	r18, 0x0A	; 10
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	25 c0       	rjmp	.+74     	; 0x948 <vfprintf+0x298>
 8fe:	93 2d       	mov	r25, r3
 900:	99 7f       	andi	r25, 0xF9	; 249
 902:	b9 2e       	mov	r11, r25
 904:	8f 36       	cpi	r24, 0x6F	; 111
 906:	c1 f0       	breq	.+48     	; 0x938 <vfprintf+0x288>
 908:	18 f4       	brcc	.+6      	; 0x910 <vfprintf+0x260>
 90a:	88 35       	cpi	r24, 0x58	; 88
 90c:	79 f0       	breq	.+30     	; 0x92c <vfprintf+0x27c>
 90e:	ae c0       	rjmp	.+348    	; 0xa6c <vfprintf+0x3bc>
 910:	80 37       	cpi	r24, 0x70	; 112
 912:	19 f0       	breq	.+6      	; 0x91a <vfprintf+0x26a>
 914:	88 37       	cpi	r24, 0x78	; 120
 916:	21 f0       	breq	.+8      	; 0x920 <vfprintf+0x270>
 918:	a9 c0       	rjmp	.+338    	; 0xa6c <vfprintf+0x3bc>
 91a:	e9 2f       	mov	r30, r25
 91c:	e0 61       	ori	r30, 0x10	; 16
 91e:	be 2e       	mov	r11, r30
 920:	b4 fe       	sbrs	r11, 4
 922:	0d c0       	rjmp	.+26     	; 0x93e <vfprintf+0x28e>
 924:	fb 2d       	mov	r31, r11
 926:	f4 60       	ori	r31, 0x04	; 4
 928:	bf 2e       	mov	r11, r31
 92a:	09 c0       	rjmp	.+18     	; 0x93e <vfprintf+0x28e>
 92c:	34 fe       	sbrs	r3, 4
 92e:	0a c0       	rjmp	.+20     	; 0x944 <vfprintf+0x294>
 930:	29 2f       	mov	r18, r25
 932:	26 60       	ori	r18, 0x06	; 6
 934:	b2 2e       	mov	r11, r18
 936:	06 c0       	rjmp	.+12     	; 0x944 <vfprintf+0x294>
 938:	28 e0       	ldi	r18, 0x08	; 8
 93a:	30 e0       	ldi	r19, 0x00	; 0
 93c:	05 c0       	rjmp	.+10     	; 0x948 <vfprintf+0x298>
 93e:	20 e1       	ldi	r18, 0x10	; 16
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	02 c0       	rjmp	.+4      	; 0x948 <vfprintf+0x298>
 944:	20 e1       	ldi	r18, 0x10	; 16
 946:	32 e0       	ldi	r19, 0x02	; 2
 948:	f8 01       	movw	r30, r16
 94a:	b7 fe       	sbrs	r11, 7
 94c:	07 c0       	rjmp	.+14     	; 0x95c <vfprintf+0x2ac>
 94e:	60 81       	ld	r22, Z
 950:	71 81       	ldd	r23, Z+1	; 0x01
 952:	82 81       	ldd	r24, Z+2	; 0x02
 954:	93 81       	ldd	r25, Z+3	; 0x03
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	06 c0       	rjmp	.+12     	; 0x968 <vfprintf+0x2b8>
 95c:	60 81       	ld	r22, Z
 95e:	71 81       	ldd	r23, Z+1	; 0x01
 960:	80 e0       	ldi	r24, 0x00	; 0
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	0e 5f       	subi	r16, 0xFE	; 254
 966:	1f 4f       	sbci	r17, 0xFF	; 255
 968:	a3 01       	movw	r20, r6
 96a:	f1 d0       	rcall	.+482    	; 0xb4e <__ultoa_invert>
 96c:	88 2e       	mov	r8, r24
 96e:	86 18       	sub	r8, r6
 970:	fb 2d       	mov	r31, r11
 972:	ff 77       	andi	r31, 0x7F	; 127
 974:	3f 2e       	mov	r3, r31
 976:	36 fe       	sbrs	r3, 6
 978:	0d c0       	rjmp	.+26     	; 0x994 <vfprintf+0x2e4>
 97a:	23 2d       	mov	r18, r3
 97c:	2e 7f       	andi	r18, 0xFE	; 254
 97e:	a2 2e       	mov	r10, r18
 980:	89 14       	cp	r8, r9
 982:	58 f4       	brcc	.+22     	; 0x99a <vfprintf+0x2ea>
 984:	34 fe       	sbrs	r3, 4
 986:	0b c0       	rjmp	.+22     	; 0x99e <vfprintf+0x2ee>
 988:	32 fc       	sbrc	r3, 2
 98a:	09 c0       	rjmp	.+18     	; 0x99e <vfprintf+0x2ee>
 98c:	83 2d       	mov	r24, r3
 98e:	8e 7e       	andi	r24, 0xEE	; 238
 990:	a8 2e       	mov	r10, r24
 992:	05 c0       	rjmp	.+10     	; 0x99e <vfprintf+0x2ee>
 994:	b8 2c       	mov	r11, r8
 996:	a3 2c       	mov	r10, r3
 998:	03 c0       	rjmp	.+6      	; 0x9a0 <vfprintf+0x2f0>
 99a:	b8 2c       	mov	r11, r8
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <vfprintf+0x2f0>
 99e:	b9 2c       	mov	r11, r9
 9a0:	a4 fe       	sbrs	r10, 4
 9a2:	0f c0       	rjmp	.+30     	; 0x9c2 <vfprintf+0x312>
 9a4:	fe 01       	movw	r30, r28
 9a6:	e8 0d       	add	r30, r8
 9a8:	f1 1d       	adc	r31, r1
 9aa:	80 81       	ld	r24, Z
 9ac:	80 33       	cpi	r24, 0x30	; 48
 9ae:	21 f4       	brne	.+8      	; 0x9b8 <vfprintf+0x308>
 9b0:	9a 2d       	mov	r25, r10
 9b2:	99 7e       	andi	r25, 0xE9	; 233
 9b4:	a9 2e       	mov	r10, r25
 9b6:	09 c0       	rjmp	.+18     	; 0x9ca <vfprintf+0x31a>
 9b8:	a2 fe       	sbrs	r10, 2
 9ba:	06 c0       	rjmp	.+12     	; 0x9c8 <vfprintf+0x318>
 9bc:	b3 94       	inc	r11
 9be:	b3 94       	inc	r11
 9c0:	04 c0       	rjmp	.+8      	; 0x9ca <vfprintf+0x31a>
 9c2:	8a 2d       	mov	r24, r10
 9c4:	86 78       	andi	r24, 0x86	; 134
 9c6:	09 f0       	breq	.+2      	; 0x9ca <vfprintf+0x31a>
 9c8:	b3 94       	inc	r11
 9ca:	a3 fc       	sbrc	r10, 3
 9cc:	10 c0       	rjmp	.+32     	; 0x9ee <vfprintf+0x33e>
 9ce:	a0 fe       	sbrs	r10, 0
 9d0:	06 c0       	rjmp	.+12     	; 0x9de <vfprintf+0x32e>
 9d2:	b2 14       	cp	r11, r2
 9d4:	80 f4       	brcc	.+32     	; 0x9f6 <vfprintf+0x346>
 9d6:	28 0c       	add	r2, r8
 9d8:	92 2c       	mov	r9, r2
 9da:	9b 18       	sub	r9, r11
 9dc:	0d c0       	rjmp	.+26     	; 0x9f8 <vfprintf+0x348>
 9de:	b2 14       	cp	r11, r2
 9e0:	58 f4       	brcc	.+22     	; 0x9f8 <vfprintf+0x348>
 9e2:	b6 01       	movw	r22, r12
 9e4:	80 e2       	ldi	r24, 0x20	; 32
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	76 d0       	rcall	.+236    	; 0xad6 <fputc>
 9ea:	b3 94       	inc	r11
 9ec:	f8 cf       	rjmp	.-16     	; 0x9de <vfprintf+0x32e>
 9ee:	b2 14       	cp	r11, r2
 9f0:	18 f4       	brcc	.+6      	; 0x9f8 <vfprintf+0x348>
 9f2:	2b 18       	sub	r2, r11
 9f4:	02 c0       	rjmp	.+4      	; 0x9fa <vfprintf+0x34a>
 9f6:	98 2c       	mov	r9, r8
 9f8:	21 2c       	mov	r2, r1
 9fa:	a4 fe       	sbrs	r10, 4
 9fc:	0f c0       	rjmp	.+30     	; 0xa1c <vfprintf+0x36c>
 9fe:	b6 01       	movw	r22, r12
 a00:	80 e3       	ldi	r24, 0x30	; 48
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	68 d0       	rcall	.+208    	; 0xad6 <fputc>
 a06:	a2 fe       	sbrs	r10, 2
 a08:	16 c0       	rjmp	.+44     	; 0xa36 <vfprintf+0x386>
 a0a:	a1 fc       	sbrc	r10, 1
 a0c:	03 c0       	rjmp	.+6      	; 0xa14 <vfprintf+0x364>
 a0e:	88 e7       	ldi	r24, 0x78	; 120
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <vfprintf+0x368>
 a14:	88 e5       	ldi	r24, 0x58	; 88
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	b6 01       	movw	r22, r12
 a1a:	0c c0       	rjmp	.+24     	; 0xa34 <vfprintf+0x384>
 a1c:	8a 2d       	mov	r24, r10
 a1e:	86 78       	andi	r24, 0x86	; 134
 a20:	51 f0       	breq	.+20     	; 0xa36 <vfprintf+0x386>
 a22:	a1 fe       	sbrs	r10, 1
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <vfprintf+0x37a>
 a26:	8b e2       	ldi	r24, 0x2B	; 43
 a28:	01 c0       	rjmp	.+2      	; 0xa2c <vfprintf+0x37c>
 a2a:	80 e2       	ldi	r24, 0x20	; 32
 a2c:	a7 fc       	sbrc	r10, 7
 a2e:	8d e2       	ldi	r24, 0x2D	; 45
 a30:	b6 01       	movw	r22, r12
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	50 d0       	rcall	.+160    	; 0xad6 <fputc>
 a36:	89 14       	cp	r8, r9
 a38:	30 f4       	brcc	.+12     	; 0xa46 <vfprintf+0x396>
 a3a:	b6 01       	movw	r22, r12
 a3c:	80 e3       	ldi	r24, 0x30	; 48
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	4a d0       	rcall	.+148    	; 0xad6 <fputc>
 a42:	9a 94       	dec	r9
 a44:	f8 cf       	rjmp	.-16     	; 0xa36 <vfprintf+0x386>
 a46:	8a 94       	dec	r8
 a48:	f3 01       	movw	r30, r6
 a4a:	e8 0d       	add	r30, r8
 a4c:	f1 1d       	adc	r31, r1
 a4e:	80 81       	ld	r24, Z
 a50:	b6 01       	movw	r22, r12
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	40 d0       	rcall	.+128    	; 0xad6 <fputc>
 a56:	81 10       	cpse	r8, r1
 a58:	f6 cf       	rjmp	.-20     	; 0xa46 <vfprintf+0x396>
 a5a:	22 20       	and	r2, r2
 a5c:	09 f4       	brne	.+2      	; 0xa60 <vfprintf+0x3b0>
 a5e:	4e ce       	rjmp	.-868    	; 0x6fc <vfprintf+0x4c>
 a60:	b6 01       	movw	r22, r12
 a62:	80 e2       	ldi	r24, 0x20	; 32
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	37 d0       	rcall	.+110    	; 0xad6 <fputc>
 a68:	2a 94       	dec	r2
 a6a:	f7 cf       	rjmp	.-18     	; 0xa5a <vfprintf+0x3aa>
 a6c:	f6 01       	movw	r30, r12
 a6e:	86 81       	ldd	r24, Z+6	; 0x06
 a70:	97 81       	ldd	r25, Z+7	; 0x07
 a72:	02 c0       	rjmp	.+4      	; 0xa78 <vfprintf+0x3c8>
 a74:	8f ef       	ldi	r24, 0xFF	; 255
 a76:	9f ef       	ldi	r25, 0xFF	; 255
 a78:	2b 96       	adiw	r28, 0x0b	; 11
 a7a:	0f b6       	in	r0, 0x3f	; 63
 a7c:	f8 94       	cli
 a7e:	de bf       	out	0x3e, r29	; 62
 a80:	0f be       	out	0x3f, r0	; 63
 a82:	cd bf       	out	0x3d, r28	; 61
 a84:	df 91       	pop	r29
 a86:	cf 91       	pop	r28
 a88:	1f 91       	pop	r17
 a8a:	0f 91       	pop	r16
 a8c:	ff 90       	pop	r15
 a8e:	ef 90       	pop	r14
 a90:	df 90       	pop	r13
 a92:	cf 90       	pop	r12
 a94:	bf 90       	pop	r11
 a96:	af 90       	pop	r10
 a98:	9f 90       	pop	r9
 a9a:	8f 90       	pop	r8
 a9c:	7f 90       	pop	r7
 a9e:	6f 90       	pop	r6
 aa0:	5f 90       	pop	r5
 aa2:	4f 90       	pop	r4
 aa4:	3f 90       	pop	r3
 aa6:	2f 90       	pop	r2
 aa8:	08 95       	ret

00000aaa <strnlen_P>:
 aaa:	fc 01       	movw	r30, r24
 aac:	05 90       	lpm	r0, Z+
 aae:	61 50       	subi	r22, 0x01	; 1
 ab0:	70 40       	sbci	r23, 0x00	; 0
 ab2:	01 10       	cpse	r0, r1
 ab4:	d8 f7       	brcc	.-10     	; 0xaac <strnlen_P+0x2>
 ab6:	80 95       	com	r24
 ab8:	90 95       	com	r25
 aba:	8e 0f       	add	r24, r30
 abc:	9f 1f       	adc	r25, r31
 abe:	08 95       	ret

00000ac0 <strnlen>:
 ac0:	fc 01       	movw	r30, r24
 ac2:	61 50       	subi	r22, 0x01	; 1
 ac4:	70 40       	sbci	r23, 0x00	; 0
 ac6:	01 90       	ld	r0, Z+
 ac8:	01 10       	cpse	r0, r1
 aca:	d8 f7       	brcc	.-10     	; 0xac2 <strnlen+0x2>
 acc:	80 95       	com	r24
 ace:	90 95       	com	r25
 ad0:	8e 0f       	add	r24, r30
 ad2:	9f 1f       	adc	r25, r31
 ad4:	08 95       	ret

00000ad6 <fputc>:
 ad6:	0f 93       	push	r16
 ad8:	1f 93       	push	r17
 ada:	cf 93       	push	r28
 adc:	df 93       	push	r29
 ade:	fb 01       	movw	r30, r22
 ae0:	23 81       	ldd	r18, Z+3	; 0x03
 ae2:	21 fd       	sbrc	r18, 1
 ae4:	03 c0       	rjmp	.+6      	; 0xaec <fputc+0x16>
 ae6:	8f ef       	ldi	r24, 0xFF	; 255
 ae8:	9f ef       	ldi	r25, 0xFF	; 255
 aea:	2c c0       	rjmp	.+88     	; 0xb44 <fputc+0x6e>
 aec:	22 ff       	sbrs	r18, 2
 aee:	16 c0       	rjmp	.+44     	; 0xb1c <fputc+0x46>
 af0:	46 81       	ldd	r20, Z+6	; 0x06
 af2:	57 81       	ldd	r21, Z+7	; 0x07
 af4:	24 81       	ldd	r18, Z+4	; 0x04
 af6:	35 81       	ldd	r19, Z+5	; 0x05
 af8:	42 17       	cp	r20, r18
 afa:	53 07       	cpc	r21, r19
 afc:	44 f4       	brge	.+16     	; 0xb0e <fputc+0x38>
 afe:	a0 81       	ld	r26, Z
 b00:	b1 81       	ldd	r27, Z+1	; 0x01
 b02:	9d 01       	movw	r18, r26
 b04:	2f 5f       	subi	r18, 0xFF	; 255
 b06:	3f 4f       	sbci	r19, 0xFF	; 255
 b08:	31 83       	std	Z+1, r19	; 0x01
 b0a:	20 83       	st	Z, r18
 b0c:	8c 93       	st	X, r24
 b0e:	26 81       	ldd	r18, Z+6	; 0x06
 b10:	37 81       	ldd	r19, Z+7	; 0x07
 b12:	2f 5f       	subi	r18, 0xFF	; 255
 b14:	3f 4f       	sbci	r19, 0xFF	; 255
 b16:	37 83       	std	Z+7, r19	; 0x07
 b18:	26 83       	std	Z+6, r18	; 0x06
 b1a:	14 c0       	rjmp	.+40     	; 0xb44 <fputc+0x6e>
 b1c:	8b 01       	movw	r16, r22
 b1e:	ec 01       	movw	r28, r24
 b20:	fb 01       	movw	r30, r22
 b22:	00 84       	ldd	r0, Z+8	; 0x08
 b24:	f1 85       	ldd	r31, Z+9	; 0x09
 b26:	e0 2d       	mov	r30, r0
 b28:	09 95       	icall
 b2a:	89 2b       	or	r24, r25
 b2c:	e1 f6       	brne	.-72     	; 0xae6 <fputc+0x10>
 b2e:	d8 01       	movw	r26, r16
 b30:	16 96       	adiw	r26, 0x06	; 6
 b32:	8d 91       	ld	r24, X+
 b34:	9c 91       	ld	r25, X
 b36:	17 97       	sbiw	r26, 0x07	; 7
 b38:	01 96       	adiw	r24, 0x01	; 1
 b3a:	17 96       	adiw	r26, 0x07	; 7
 b3c:	9c 93       	st	X, r25
 b3e:	8e 93       	st	-X, r24
 b40:	16 97       	sbiw	r26, 0x06	; 6
 b42:	ce 01       	movw	r24, r28
 b44:	df 91       	pop	r29
 b46:	cf 91       	pop	r28
 b48:	1f 91       	pop	r17
 b4a:	0f 91       	pop	r16
 b4c:	08 95       	ret

00000b4e <__ultoa_invert>:
 b4e:	fa 01       	movw	r30, r20
 b50:	aa 27       	eor	r26, r26
 b52:	28 30       	cpi	r18, 0x08	; 8
 b54:	51 f1       	breq	.+84     	; 0xbaa <__ultoa_invert+0x5c>
 b56:	20 31       	cpi	r18, 0x10	; 16
 b58:	81 f1       	breq	.+96     	; 0xbba <__ultoa_invert+0x6c>
 b5a:	e8 94       	clt
 b5c:	6f 93       	push	r22
 b5e:	6e 7f       	andi	r22, 0xFE	; 254
 b60:	6e 5f       	subi	r22, 0xFE	; 254
 b62:	7f 4f       	sbci	r23, 0xFF	; 255
 b64:	8f 4f       	sbci	r24, 0xFF	; 255
 b66:	9f 4f       	sbci	r25, 0xFF	; 255
 b68:	af 4f       	sbci	r26, 0xFF	; 255
 b6a:	b1 e0       	ldi	r27, 0x01	; 1
 b6c:	3e d0       	rcall	.+124    	; 0xbea <__ultoa_invert+0x9c>
 b6e:	b4 e0       	ldi	r27, 0x04	; 4
 b70:	3c d0       	rcall	.+120    	; 0xbea <__ultoa_invert+0x9c>
 b72:	67 0f       	add	r22, r23
 b74:	78 1f       	adc	r23, r24
 b76:	89 1f       	adc	r24, r25
 b78:	9a 1f       	adc	r25, r26
 b7a:	a1 1d       	adc	r26, r1
 b7c:	68 0f       	add	r22, r24
 b7e:	79 1f       	adc	r23, r25
 b80:	8a 1f       	adc	r24, r26
 b82:	91 1d       	adc	r25, r1
 b84:	a1 1d       	adc	r26, r1
 b86:	6a 0f       	add	r22, r26
 b88:	71 1d       	adc	r23, r1
 b8a:	81 1d       	adc	r24, r1
 b8c:	91 1d       	adc	r25, r1
 b8e:	a1 1d       	adc	r26, r1
 b90:	20 d0       	rcall	.+64     	; 0xbd2 <__ultoa_invert+0x84>
 b92:	09 f4       	brne	.+2      	; 0xb96 <__ultoa_invert+0x48>
 b94:	68 94       	set
 b96:	3f 91       	pop	r19
 b98:	2a e0       	ldi	r18, 0x0A	; 10
 b9a:	26 9f       	mul	r18, r22
 b9c:	11 24       	eor	r1, r1
 b9e:	30 19       	sub	r19, r0
 ba0:	30 5d       	subi	r19, 0xD0	; 208
 ba2:	31 93       	st	Z+, r19
 ba4:	de f6       	brtc	.-74     	; 0xb5c <__ultoa_invert+0xe>
 ba6:	cf 01       	movw	r24, r30
 ba8:	08 95       	ret
 baa:	46 2f       	mov	r20, r22
 bac:	47 70       	andi	r20, 0x07	; 7
 bae:	40 5d       	subi	r20, 0xD0	; 208
 bb0:	41 93       	st	Z+, r20
 bb2:	b3 e0       	ldi	r27, 0x03	; 3
 bb4:	0f d0       	rcall	.+30     	; 0xbd4 <__ultoa_invert+0x86>
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__ultoa_invert+0x5c>
 bb8:	f6 cf       	rjmp	.-20     	; 0xba6 <__ultoa_invert+0x58>
 bba:	46 2f       	mov	r20, r22
 bbc:	4f 70       	andi	r20, 0x0F	; 15
 bbe:	40 5d       	subi	r20, 0xD0	; 208
 bc0:	4a 33       	cpi	r20, 0x3A	; 58
 bc2:	18 f0       	brcs	.+6      	; 0xbca <__ultoa_invert+0x7c>
 bc4:	49 5d       	subi	r20, 0xD9	; 217
 bc6:	31 fd       	sbrc	r19, 1
 bc8:	40 52       	subi	r20, 0x20	; 32
 bca:	41 93       	st	Z+, r20
 bcc:	02 d0       	rcall	.+4      	; 0xbd2 <__ultoa_invert+0x84>
 bce:	a9 f7       	brne	.-22     	; 0xbba <__ultoa_invert+0x6c>
 bd0:	ea cf       	rjmp	.-44     	; 0xba6 <__ultoa_invert+0x58>
 bd2:	b4 e0       	ldi	r27, 0x04	; 4
 bd4:	a6 95       	lsr	r26
 bd6:	97 95       	ror	r25
 bd8:	87 95       	ror	r24
 bda:	77 95       	ror	r23
 bdc:	67 95       	ror	r22
 bde:	ba 95       	dec	r27
 be0:	c9 f7       	brne	.-14     	; 0xbd4 <__ultoa_invert+0x86>
 be2:	00 97       	sbiw	r24, 0x00	; 0
 be4:	61 05       	cpc	r22, r1
 be6:	71 05       	cpc	r23, r1
 be8:	08 95       	ret
 bea:	9b 01       	movw	r18, r22
 bec:	ac 01       	movw	r20, r24
 bee:	0a 2e       	mov	r0, r26
 bf0:	06 94       	lsr	r0
 bf2:	57 95       	ror	r21
 bf4:	47 95       	ror	r20
 bf6:	37 95       	ror	r19
 bf8:	27 95       	ror	r18
 bfa:	ba 95       	dec	r27
 bfc:	c9 f7       	brne	.-14     	; 0xbf0 <__ultoa_invert+0xa2>
 bfe:	62 0f       	add	r22, r18
 c00:	73 1f       	adc	r23, r19
 c02:	84 1f       	adc	r24, r20
 c04:	95 1f       	adc	r25, r21
 c06:	a0 1d       	adc	r26, r0
 c08:	08 95       	ret

00000c0a <_exit>:
 c0a:	f8 94       	cli

00000c0c <__stop_program>:
 c0c:	ff cf       	rjmp	.-2      	; 0xc0c <__stop_program>
